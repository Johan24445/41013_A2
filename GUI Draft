function antialarmsnoozer_gui()
    % Initialize the LA2 instance once
    la2 = LA2();

    % Create main figure for the GUI
    f = figure('Name', 'Robot Control Interface', 'NumberTitle', 'off', ...
        'Position', [100, 100, 1000, 600]);

    % Panel for Animation Controls
    % Panel for UR3 Controls
    uipanelUR3 = uipanel('Title', 'UR3 Controls', 'FontSize', 12, ...
        'Position', [0.05, 0.55, 0.4, 0.4]);

    % Panel for KinovaLink6 Controls
    uipanelKinova = uipanel('Title', 'KinovaLink6 Controls', 'FontSize', 12, ...
        'Position', [0.55, 0.55, 0.4, 0.4]);

    uipanelAnim = uipanel('Title', 'Animation Controls', 'FontSize', 12, ...
        'Position', [0.05, 0.05, 0.9, 0.4]);

    % UR3 Joint Controls
    ur3_limits = [-360 360; -360 360; -360 360; -360 360; -360 360; -360 360];

    % KinovaLink6 Joint Controls
    kinova_limits = [-360 360; -90 90; -170 170; -360 360; -360 360; -360 360];

    % Create sliders and labels for UR3
    sliderUR3 = zeros(6, 1);
    for i = 1:6
        % Label
        uicontrol('Parent', uipanelUR3, 'Style', 'text', ...
            'String', sprintf('Joint %d', i), 'FontSize', 10, ...
            'Position', [20, 300 - (i-1)*40, 60, 20]);

        % Value display
        uicontrol('Parent', uipanelUR3, 'Style', 'text', ...
            'String', '0°', 'FontSize', 10, ...
            'Position', [240, 300 - (i-1)*40, 50, 20], ...
            'Tag', sprintf('UR3_value_%d', i));

        % Slider
        sliderUR3(i) = uicontrol('Parent', uipanelUR3, 'Style', 'slider', ...
            'Min', ur3_limits(i, 1), 'Max', ur3_limits(i, 2), ...
            'Value', 0, 'Position', [90, 300 - (i-1)*40, 140, 20], ...
            'Callback', @(src, event) updateUR3Joint(src, event, i, la2.robot1));
    end

    % Reset UR3 button
    uicontrol('Parent', uipanelUR3, 'Style', 'pushbutton', ...
        'String', 'Reset UR3', 'FontSize', 10, ...
        'Position', [90, 40, 100, 30], ...
        'Callback', @(src, event) resetUR3(la2.robot1, sliderUR3));

    % Create sliders and labels for KinovaLink6
    sliderKinova = zeros(6, 1);
    for i = 1:6
        % Label
        uicontrol('Parent', uipanelKinova, 'Style', 'text', ...
            'String', sprintf('Joint %d', i), 'FontSize', 10, ...
            'Position', [20, 300 - (i-1)*40, 60, 20]);

        % Value display
        uicontrol('Parent', uipanelKinova, 'Style', 'text', ...
            'String', '0°', 'FontSize', 10, ...
            'Position', [240, 300 - (i-1)*40, 50, 20], ...
            'Tag', sprintf('Kinova_value_%d', i));

        % Slider
        sliderKinova(i) = uicontrol('Parent', uipanelKinova, 'Style', 'slider', ...
            'Min', kinova_limits(i, 1), 'Max', kinova_limits(i, 2), ...
            'Value', 0, 'Position', [90, 300 - (i-1)*40, 140, 20], ...
            'Callback', @(src, event) updateKinovaJoint(src, event, i, la2.robot2));
    end

    % Reset Kinova button
    uicontrol('Parent', uipanelKinova, 'Style', 'pushbutton', ...
        'String', 'Reset Kinova', 'FontSize', 10, ...
        'Position', [90, 40, 100, 30], ...
        'Callback', @(src, event) resetKinova(la2.robot2, sliderKinova));

    % Animation Control Buttons
    uicontrol('Parent', uipanelAnim, 'Style', 'pushbutton', ...
        'String', 'Play R1', 'FontSize', 10, ...
        'Position', [30, 100, 100, 30], ...
        'Callback', @(src, event) la2.R1());

    uicontrol('Parent', uipanelAnim, 'Style', 'pushbutton', ...
        'String', 'Pause R1', 'FontSize', 10, ...
        'Position', [150, 100, 100, 30], ...
        'Callback', @(src, event) la2.pauseR1());

    uicontrol('Parent', uipanelAnim, 'Style', 'pushbutton', ...
        'String', 'Play R2', 'FontSize', 10, ...
        'Position', [30, 50, 100, 30], ...
        'Callback', @(src, event) la2.R2());

    uicontrol('Parent', uipanelAnim, 'Style', 'pushbutton', ...
        'String', 'Pause R2', 'FontSize', 10, ...
        'Position', [150, 50, 100, 30], ...
        'Callback', @(src, event) la2.pauseR2());
end

function updateUR3Joint(src, ~, joint, robot)
    % Update the joint angle display
    valueText = findobj('Tag', sprintf('UR3_value_%d', joint));
    set(valueText, 'String', sprintf('%.1f°', src.Value));

    % Get current joint configuration and update specified joint
    q = robot.model.getpos();
    q(joint) = deg2rad(src.Value);
    robot.model.animate(q);
end

function updateKinovaJoint(src, ~, joint, robot)
    % Update the joint angle display
    valueText = findobj('Tag', sprintf('Kinova_value_%d', joint));
    set(valueText, 'String', sprintf('%.1f°', src.Value));

    % Get current joint configuration and update specified joint
    q = robot.model.getpos();
    q(joint) = deg2rad(src.Value);
    robot.model.animate(q);
end

function resetUR3(robot, sliders)
    % Reset UR3 to zero configuration
    q = zeros(1, 6);
    robot.model.animate(q);

    % Reset all sliders and displays to zero
    for i = 1:6
        set(sliders(i), 'Value', 0);
        valueText = findobj('Tag', sprintf('UR3_value_%d', i));
        set(valueText, 'String', '0.0°');
    end
end

function resetKinova(robot, sliders)
    % Reset KinovaLink6 to zero configuration
    q = zeros(1, 6);
    robot.model.animate(q);

    % Reset all sliders and displays to zero
    for i = 1:6
        set(sliders(i), 'Value', 0);
        valueText = findobj('Tag', sprintf('Kinova_value_%d', i));
        set(valueText, 'String', '0.0°');
    end
end
